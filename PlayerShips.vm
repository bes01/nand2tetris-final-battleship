function PlayerShips.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push this 2
call Array.new 1
pop this 3
push pointer 0
push constant 0
not
call PlayerShips.resetBoard 2
pop temp 0
push pointer 0
return
function PlayerShips.toggleShipPart 2
push argument 0
pop pointer 0
push argument 1
push this 3
add
pop pointer 1
push that 0
pop local 1
push constant 0
not
pop local 0
push argument 2
push local 1
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 0
label IF_FALSE0
push local 0
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 2
push local 1
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
call Screen.setColor 1
pop temp 0
label IF_FALSE1
push local 0
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 2
push local 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
call Screen.setColor 1
pop temp 0
label IF_FALSE2
push this 0
push argument 1
push this 2
call Math.multiply 2
add
pop argument 1
push this 1
push argument 2
push this 2
call Math.multiply 2
add
pop argument 2
push argument 1
push constant 2
add
push argument 2
push constant 2
add
push argument 1
push this 2
add
push constant 2
sub
push argument 2
push this 2
add
push constant 2
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function PlayerShips.isShipPart 1
push argument 0
pop pointer 0
push argument 1
push this 3
add
pop pointer 1
push that 0
pop local 0
push argument 2
push local 0
add
pop pointer 1
push that 0
return
function PlayerShips.validateBoard 9
push argument 0
pop pointer 0
push constant 1
pop local 3
push constant 1
pop local 4
push constant 1
pop local 5
push constant 2
pop local 6
push constant 2
pop local 7
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 2
lt
not
if-goto WHILE_END0
push local 1
push this 3
add
pop pointer 1
push that 0
pop local 0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push this 2
lt
not
if-goto WHILE_END1
push local 2
push local 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 1
push local 2
call PlayerShips.markShip 3
pop local 8
push local 8
push constant 5
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push local 8
push constant 5
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 3
push constant 1
sub
pop local 3
label IF_FALSE2
push local 8
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 4
push constant 1
sub
pop local 4
label IF_FALSE3
push local 8
push local 5
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 5
push constant 1
sub
pop local 5
label IF_FALSE4
push local 8
push local 6
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 6
push constant 1
sub
pop local 6
label IF_FALSE5
push local 8
push constant 1
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 7
push constant 1
sub
pop local 7
label IF_FALSE6
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 3
push local 4
or
push local 5
or
push local 6
or
push local 7
or
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
return
label IF_FALSE7
push constant 0
not
return
function PlayerShips.markShip 4
push argument 0
pop pointer 0
push constant 0
pop local 3
push constant 0
pop local 2
push constant 0
pop local 0
push argument 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push constant 1
sub
push this 3
add
pop pointer 1
push that 0
pop local 1
push argument 2
push local 1
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 3
pop local 3
label IF_FALSE1
label IF_FALSE0
push argument 1
push this 2
push constant 1
sub
eq
not
push local 3
push constant 0
eq
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
push constant 1
add
push this 3
add
pop pointer 1
push that 0
pop local 1
push argument 2
push local 1
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 4
pop local 3
label IF_FALSE3
label IF_FALSE2
push argument 2
push constant 0
eq
not
push local 3
push constant 0
eq
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 1
push this 3
add
pop pointer 1
push that 0
pop local 1
push argument 2
push constant 1
sub
push local 1
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 1
pop local 3
label IF_FALSE5
label IF_FALSE4
push argument 2
push this 2
push constant 1
sub
eq
not
push local 3
push constant 0
eq
and
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push argument 1
push this 3
add
pop pointer 1
push that 0
pop local 1
push argument 2
push constant 1
add
push local 1
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 2
pop local 3
label IF_FALSE7
label IF_FALSE6
push local 3
push constant 0
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push argument 1
push this 3
add
pop pointer 1
push that 0
pop local 1
push argument 2
push local 1
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
return
label IF_FALSE8
push local 3
push constant 3
eq
push local 3
push constant 4
eq
or
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push argument 1
pop local 3
label WHILE_EXP0
push argument 1
push constant 1
neg
eq
not
push local 0
not
and
not
if-goto WHILE_END0
push argument 1
push this 3
add
pop pointer 1
push that 0
pop local 1
push argument 2
push local 1
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 0
not
pop local 0
label IF_FALSE10
push local 0
not
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push argument 2
push local 1
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 2
push constant 0
eq
not
push argument 2
push constant 1
sub
push local 1
add
pop pointer 1
push that 0
and
push argument 2
push this 2
push constant 1
sub
eq
not
push argument 2
push constant 1
add
push local 1
add
pop pointer 1
push that 0
and
or
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push constant 0
return
label IF_FALSE12
push argument 1
push constant 1
sub
pop argument 1
push local 2
push constant 1
add
pop local 2
label IF_FALSE11
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
push local 3
push constant 1
add
pop argument 1
label WHILE_EXP1
push argument 1
push this 2
eq
not
push local 0
not
and
not
if-goto WHILE_END1
push argument 1
push this 3
add
pop pointer 1
push that 0
pop local 1
push argument 2
push local 1
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push constant 0
not
pop local 0
label IF_FALSE13
push local 0
not
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push argument 2
push local 1
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 2
push constant 0
eq
not
push argument 2
push constant 1
sub
push local 1
add
pop pointer 1
push that 0
and
push argument 2
push this 2
push constant 1
sub
eq
not
push argument 2
push constant 1
add
push local 1
add
pop pointer 1
push that 0
and
or
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push constant 0
return
label IF_FALSE15
push argument 1
push constant 1
add
pop argument 1
push local 2
push constant 1
add
pop local 2
label IF_FALSE14
goto WHILE_EXP1
label WHILE_END1
push local 2
return
label IF_FALSE9
push local 3
push constant 1
eq
push local 3
push constant 2
eq
or
if-goto IF_TRUE16
goto IF_FALSE16
label IF_TRUE16
push argument 2
pop local 3
label WHILE_EXP2
push argument 2
push constant 1
neg
eq
not
push local 0
not
and
not
if-goto WHILE_END2
push argument 1
push this 3
add
pop pointer 1
push that 0
pop local 1
push argument 2
push local 1
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE17
goto IF_FALSE17
label IF_TRUE17
push constant 0
not
pop local 0
label IF_FALSE17
push local 0
not
if-goto IF_TRUE18
goto IF_FALSE18
label IF_TRUE18
push argument 2
push local 1
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push constant 0
eq
not
if-goto IF_TRUE19
goto IF_FALSE19
label IF_TRUE19
push argument 1
push constant 1
sub
push this 3
add
pop pointer 1
push that 0
pop local 1
push argument 2
push local 1
add
pop pointer 1
push that 0
if-goto IF_TRUE20
goto IF_FALSE20
label IF_TRUE20
push constant 0
return
label IF_FALSE20
label IF_FALSE19
push argument 1
push this 2
push constant 1
sub
eq
not
if-goto IF_TRUE21
goto IF_FALSE21
label IF_TRUE21
push argument 1
push constant 1
add
push this 3
add
pop pointer 1
push that 0
pop local 1
push argument 2
push local 1
add
pop pointer 1
push that 0
if-goto IF_TRUE22
goto IF_FALSE22
label IF_TRUE22
push constant 0
return
label IF_FALSE22
label IF_FALSE21
push argument 2
push constant 1
sub
pop argument 2
push local 2
push constant 1
add
pop local 2
label IF_FALSE18
goto WHILE_EXP2
label WHILE_END2
push constant 0
pop local 0
push local 3
push constant 1
add
pop argument 2
label WHILE_EXP3
push argument 2
push this 2
eq
not
push local 0
not
and
not
if-goto WHILE_END3
push argument 1
push this 3
add
pop pointer 1
push that 0
pop local 1
push argument 2
push local 1
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE23
goto IF_FALSE23
label IF_TRUE23
push constant 0
not
pop local 0
label IF_FALSE23
push local 0
not
if-goto IF_TRUE24
goto IF_FALSE24
label IF_TRUE24
push argument 2
push local 1
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push constant 0
eq
not
if-goto IF_TRUE25
goto IF_FALSE25
label IF_TRUE25
push argument 1
push constant 1
sub
push this 3
add
pop pointer 1
push that 0
pop local 1
push argument 2
push local 1
add
pop pointer 1
push that 0
if-goto IF_TRUE26
goto IF_FALSE26
label IF_TRUE26
push constant 0
return
label IF_FALSE26
label IF_FALSE25
push argument 1
push this 2
push constant 1
sub
eq
not
if-goto IF_TRUE27
goto IF_FALSE27
label IF_TRUE27
push argument 1
push constant 1
add
push this 3
add
pop pointer 1
push that 0
pop local 1
push argument 2
push local 1
add
pop pointer 1
push that 0
if-goto IF_TRUE28
goto IF_FALSE28
label IF_TRUE28
push constant 0
return
label IF_FALSE28
label IF_FALSE27
push argument 2
push constant 1
add
pop argument 2
push local 2
push constant 1
add
pop local 2
label IF_FALSE24
goto WHILE_EXP3
label WHILE_END3
push local 2
return
label IF_FALSE16
push constant 0
return
function PlayerShips.resetBoard 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
push argument 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
call Array.new 1
pop local 2
push local 0
push this 3
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push argument 1
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push this 3
add
pop pointer 1
push that 0
pop local 2
label IF_FALSE1
label WHILE_EXP1
push local 1
push this 2
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
pop pointer 1
push that 0
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push local 0
push local 1
call PlayerShips.toggleShipPart 3
pop temp 0
label IF_FALSE2
push local 1
push local 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function PlayerShips.Dispose 0
push argument 0
pop pointer 0
push constant 0
return
