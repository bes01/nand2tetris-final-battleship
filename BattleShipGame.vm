function BattleShipGame.new 0
push constant 10
call Memory.alloc 1
pop pointer 0
push constant 28
pop this 0
push constant 228
pop this 1
push constant 284
pop this 2
push constant 484
pop this 3
push constant 28
pop this 4
push constant 228
pop this 5
push constant 20
pop this 6
push pointer 0
push this 0
push this 1
call BattleShipGame.drawCells 3
pop temp 0
push pointer 0
push this 2
push this 3
call BattleShipGame.drawCells 3
pop temp 0
push this 0
push this 4
push this 6
push this 0
push this 1
push this 4
push this 5
call Cursor.new 7
pop this 7
push this 0
push this 4
push this 6
call PlayerShips.new 3
pop this 8
push pointer 0
call BattleShipGame.initBoards 1
pop temp 0
push pointer 0
return
function BattleShipGame.drawCells 5
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 11
lt
not
if-goto WHILE_END0
push constant 0
pop local 2
push argument 1
pop local 3
push this 4
push local 0
push this 6
call Math.multiply 2
add
pop local 4
label WHILE_EXP1
push local 3
push argument 2
push constant 1
add
lt
not
if-goto WHILE_END1
push local 3
push local 4
call Screen.drawPixel 2
pop temp 0
push local 2
push this 6
eq
push local 3
push argument 1
eq
or
push local 3
push argument 2
eq
or
push local 0
push constant 10
eq
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop local 1
label WHILE_EXP2
push local 1
push constant 20
lt
not
if-goto WHILE_END2
push local 3
push local 4
push local 1
add
call Screen.drawPixel 2
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP2
label WHILE_END2
push constant 0
pop local 2
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function BattleShipGame.initBoards 4
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
not
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 131
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 7
call Cursor.moveUp 1
pop temp 0
label IF_FALSE0
push local 0
push constant 133
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 7
call Cursor.moveDown 1
pop temp 0
label IF_FALSE1
push local 0
push constant 130
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 7
call Cursor.moveLeft 1
pop temp 0
label IF_FALSE2
push local 0
push constant 132
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 7
call Cursor.moveRight 1
pop temp 0
label IF_FALSE3
push local 0
push constant 128
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 8
push this 7
call Cursor.getX 1
push this 7
call Cursor.getY 1
call PlayerShips.toggleShipPart 3
pop temp 0
label IF_FALSE4
push local 0
push constant 83
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 8
call PlayerShips.validateBoard 1
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
not
pop local 1
push this 7
call Cursor.Dispose 1
pop temp 0
label IF_FALSE6
push local 1
not
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 8
push constant 0
call PlayerShips.resetBoard 2
pop temp 0
label IF_FALSE7
label IF_FALSE5
label WHILE_EXP2
push local 0
push constant 0
eq
not
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 0
goto WHILE_EXP2
label WHILE_END2
goto WHILE_EXP0
label WHILE_END0
push local 3
call RandomUtil.new 1
push this 2
push this 4
push this 6
call AIShips.new 4
pop this 9
push constant 0
return
function BattleShipGame.run 0
push argument 0
pop pointer 0
push constant 0
return
